name: test-unzip-and-upload

on:

# 编辑触发
  push:
    branches: 
       - master

env:
  # 源
  REPO_URL: https://github.com/coolsnowwolf/lede
  # 分支
  REPO_BRANCH: master
  # PassWall插件包
  EX_PKG: true
  # 脚本
  DIY_SH: OpenWrt-R7800-Lean.sh
  # 开启SSH连接
  SSH_ACTIONS: false
  # 上传分支
  UPLOAD_BRANCH: false
  # 分支
  BRANCH: R7800-Lean
  # Github 用户名
  GITHUB_USER_NAME: badsirius
  # Github 邮箱
  GITHUB_USER_EMAIL: ${{ secrets.EMAIL }}
  # Github
  GITHUB: github.com/badsirius/actions-openwrt-r7800.git
  # 上传BIN所有内容
  UPLOAD_BIN_DIR: true
  # 上传固件
  UPLOAD_FIRMWARE: true
  # 上传到奶牛快传
  UPLOAD_COWTRANSFER: true
  # 创建+上传发布
  CREATE_RELEASE: true
  # 编译者
  BUILD_USER: badsirius
  # 微信通知
  SEND_WECHAT_MSG: false

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest

    steps:
    # 校验本地文件
    - name: Checkout
      uses: actions/checkout@main

    # 初始化编译环境
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo -E apt-get update -y
        sudo -E apt-get full-upgrade -y
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-8 gcc++-8 gcc-8-multilib g++-8-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf ecj fastjar re2c
        sudo -E ln -sf /usr/bin/gcc-8 /usr/bin/gcc
        sudo -E ln -sf /usr/bin/g++-8 /usr/bin/g++
        sudo -E ln -sf /usr/bin/gcc-ar-8 /usr/bin/gcc-ar
        sudo -E ln -sf /usr/bin/gcc-nm-8 /usr/bin/gcc-nm
        sudo -E ln -sf /usr/bin/gcc-ranlib-8 /usr/bin/gcc-ranlib

    # 克隆源代码 By bobotoy
    - name: Clone source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>Date: %cd<br/>Commit: %s")
        echo "::set-env name=useVersionInfo::$useVersionInfo"
        echo "::set-env name=DATE::$(TZ=UTC-8 date "+%Y%m%d")"
        echo "::set-env name=RELEASE_DATE::$(TZ=UTC-8 date "+%Y-%m-%d")"

    # 整理bin文件
    - name: Organize Bin Files 
      id: zipbin
      if: always()
      run: |
        cd openwrt
        zip test.zip ./*
        mkdir test
        mv test.zip ./test
        cd test
        echo "::set-env name=BIN::$PWD"
        echo "::set-output name=status::success"

    # 上传固件到奶牛快传
    - name: Upload Firmware To CowTransfer
      if: steps.zipbin.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 99 -t 3 --hash --no-progress ${BIN} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-env name=COWTRANSFER_URL::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    # 生成标签
    - name: Generate Tag
      id: tag
      if: steps.zipbin.outputs.status == 'success' && env.CREATE_RELEASE == 'true' && !cancelled()
      run: |
        echo ::set-env name=RELEASE_TAG::"$(TZ=UTC-8 date +"%Y-%m-%d")"
        echo "::set-output name=status::success"
   
    # 发行固件
    - name: Upload bin To Release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        name: Netgear ${{ env.BRANCH }} 🚀 | 自动编译 / ${{ env.RELEASE_TAG }}
        tag_name: ${{ env.RELEASE_DATE }}
        body: |            
            1、本固件为自动编译
            2、发行版中只提供完整的固件
            3、需要单独IPK请到分支下载
            4、源码：${{ env.REPO_URL }}
            -- Build by ${{ env.BUILD_USER }} @ with Github Action on ${{ env.RELEASE_DATE }}
            🚀 Auto build | 自动编译
            🔗 [Cowtransfer | 奶牛快传](${{ env.COWTRANSFER_URL }}) 
            🔗 [WeTransfer](${{ env.WETRANSFER_URL }})       
            当前使用版本:（编译前的最后一次大雕源码更新记录）            
            ${{ env.useVersionInfo }}
            ${{ github.event.commits[0].message }}
        files: ${{ env.BIN }}/*
